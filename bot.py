import telebot
import os
from flask import Flask, request

TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")
bot = telebot.TeleBot(TOKEN)
app = Flask(__name__)

BANK_RATES = {
    "mono": {
        2: 0,
        3: 0,
        4: 0,
        5: 0,
        6: 0,
        7: 0
    },
    "pumb": {
        2: 0,
        3: 0,
        4: 0,
        5: 0,
        6: 0,
        7: 0
    },
    "privat": {
        2: 1.7,
        3: 2.8,
        4: 4.5,
        5: 5.7,
        6: 6.9,
        7: 8.0
    }
}

EXTRA_PERCENT_PRIVAT = 1.3  # –≠–∫–≤–∞–π—Ä–∏–Ω–≥

@app.route('/', methods=['GET', 'HEAD'])
def index():
    return 'OK'

@app.route(f'/{TOKEN}', methods=['POST'])
def webhook():
    json_string = request.get_data().decode('utf-8')
    update = telebot.types.Update.de_json(json_string)
    bot.process_new_updates([update])
    return 'ok'

@bot.message_handler(commands=['start'])
def send_welcome(message):
    markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add("mono", "pumb", "privat")
    bot.send_message(
        message.chat.id,
        "üëã –ü—Ä–∏–≤–µ—Ç! –í—ã–±–µ—Ä–∏ –±–∞–Ω–∫ –∏–ª–∏ –≤–≤–µ–¥–∏ –≤—Ä—É—á–Ω—É—é –≤ —Ñ–æ—Ä–º–∞—Ç–µ:\n\n<–±–∞–Ω–∫> <—Å—Ä–æ–∫ –≤ –º–µ—Å—è—Ü–∞—Ö> <—Å—É–º–º–∞>\n\n–ü—Ä–∏–º–µ—Ä:\nmono 3 1000\n\n–î–æ—Å—Ç—É–ø–Ω—ã–µ –±–∞–Ω–∫–∏: mono, pumb, privat",
        reply_markup=markup
    )

@bot.message_handler(func=lambda message: True)
def handle_input(message):
    try:
        parts = message.text.lower().split()
        if len(parts) == 1 and parts[0] in BANK_RATES:
            bank = parts[0]
            rates = BANK_RATES[bank]
            response = f"üìà –¢–∞—Ä–∏—Ñ—ã {bank.title()}:\n"
            for months, rate in rates.items():
                if bank == "privat":
                    total = rate + EXTRA_PERCENT_PRIVAT
                    response += f"{months} –º–µ—Å.: {total:.1f}% ({rate:.1f}% + {EXTRA_PERCENT_PRIVAT:.1f}% —ç–∫–≤–∞–π—Ä–∏–Ω–≥)\n"
                else:
                    response += f"{months} –º–µ—Å.: {rate:.1f}%\n"
            bot.send_message(message.chat.id, response)
            return

        bank, term_str, amount_str = parts
        term = int(term_str)
        amount = float(amount_str)
        rates = BANK_RATES.get(bank)
        if not rates or term not in rates:
            bot.send_message(message.chat.id, "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ. –ü—Ä–æ–≤–µ—Ä—å –±–∞–Ω–∫ –∏ —Å—Ä–æ–∫.")
            return

        base_rate = rates[term]
        final_rate = base_rate
        if bank == "privat":
            final_rate += EXTRA_PERCENT_PRIVAT

        client_pays = amount / (1 - final_rate / 100)
        monthly_payment = client_pays / (term + 1)
        overpay = client_pays - amount

        response = f"üìä –†–∞—Å—á—ë—Ç –ø–æ {bank.title()}\n\n"
        response += f"–°—Ä–æ–∫: {term} –º–µ—Å. ({term + 1} –ø–ª–∞—Ç–µ–∂–µ–π)\n"
        if bank == "privat":
            response += f"–°—Ç–∞–≤–∫–∞: {base_rate:.1f}% + {EXTRA_PERCENT_PRIVAT:.1f}% (—ç–∫–≤–∞–π—Ä–∏–Ω–≥) = {final_rate:.1f}%\n"
        else:
            response += f"–°—Ç–∞–≤–∫–∞: {final_rate:.1f}%\n"
        response += f"–°—É–º–º–∞ –∫ –ø–æ–ª—É—á–µ–Ω–∏—é: {amount:.2f} –≥—Ä–Ω\n"
        response += f"–ö–ª–∏–µ–Ω—Ç –∑–∞–ø–ª–∞—Ç–∏—Ç: {client_pays:.2f} –≥—Ä–Ω\n"
        response += f"–ï–∂–µ–º–µ—Å—è—á–Ω–æ: {monthly_payment:.2f} –≥—Ä–Ω\n"
        response += f"–ü–µ—Ä–µ–ø–ª–∞—Ç–∞: {overpay:.2f} –≥—Ä–Ω"

        bot.send_message(message.chat.id, response)

    except Exception as e:
        bot.send_message(message.chat.id, "‚ö†Ô∏è –û—à–∏–±–∫–∞ –≤–≤–æ–¥–∞. –ò—Å–ø–æ–ª—å–∑—É–π —Ñ–æ—Ä–º–∞—Ç:\nmono 3 1000")

# Webhook setup (–≤–∞–∂–Ω–æ –¥–ª—è Render)
WEBHOOK_URL = f"https://oplata-chast-bot.onrender.com/{TOKEN}"
bot.remove_webhook()
bot.set_webhook(url=WEBHOOK_URL)

if __name__ == "__main__":
    app.run(host="0.0.0.0", port=int(os.environ.get("PORT", 10000)))
